test = {'a': 1, 'c': {'a': 2, 'b': {'x': 5, 'y' : 10}}, 'd': [1, 2, 3]}


func flatten(inputJSON Dict, lkey) {
	flattenedJSON = {}
	for rkey, value := range json {
		key = lkey+rkey
		if key is Dict type {
			for key, value := range flatten(inputJSON, lkey) {
				flattenedJSON[key] = value
			}
		} else {
			flattenedJSON[key] = value
		}
	}
	return flattenedJSON
}



flattenedJSON.update(inputJSON) is of course equivalent to this code: 

for key, value in inputJSON.iteritems(): 
flattenedJSON[key] = value 


ret.update(parse_dict(val, key+'_'))


def parse_dict(init, lkey=''):
    ret = {}
    for rkey,val in init.items():
        key = lkey+rkey
        if isinstance(val, dict):
            ret.update(parse_dict(val, key+'_'))
        else:
            ret[key] = val
    return ret

print(parse_dict(test,''))